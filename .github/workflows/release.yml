env:
  BASE_DIR: "./docs"

permissions:
  contents: write

# Run Manually
on:
  workflow_dispatch:
    inputs:
      new_version:
        description: "Please input the release version."
        required: false
        type: string
      target:
        description: "input the target you want to output."
        required: false
        default: "README"
        type: string

jobs:
  steps:
    env:
      NEW_VERSION: ${{ inputs.new_version }}
      TARGET: ${{ inputs.target }}
    name: Release document
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: yarn cache clean
      - uses: actions/setup-node@v4
        with:
          # use node-version via package.json
          node-version-file: "package.json"
          cache: "yarn"
      # - name: Install pre dependencies
      #   run: yarn dlx markdown-pdf
      - name: Install dependencies
        run: yarn install --immutable
      - name: Use variables
        run: |
          echo "new release version : $NEW_VERSION"
          echo "target file : $TARGET"
          echo "full path: $BASE_DIR/$TARGET.md"
      - name: Build pdf
        run: yarn dlx -p md-to-pdf md-to-pdf "$BASE_DIR/$TARGET.md" --config-file ./pdf-configs/config.js
      # https://github.com/softprops/action-gh-release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Uploaded the following
            - ${{env.BASE_DIR}}/${{env.TARGET}}.md
          # NOTE: improve to upload on the `dist` directory
          files: ${{ env.BASE_DIR }}/${{ env.TARGET }}.pdf
      # see. https://github.com/actions/create-release
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Uploaded the following resume.
      #       - "$BASE_DIR/$TARGET"
      #     draft: false
      #     prerelease: false
      # https://github.com/actions/upload-release-asset to
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: "$BASE_DIR/$TARGET"
      #     asset_name: "$TARGET"
      #     asset_content_type: application/pdf
